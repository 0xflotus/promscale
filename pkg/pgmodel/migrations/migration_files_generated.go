// Code generated by vfsgen; DO NOT EDIT.

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// SqlFiles statically implements the virtual filesystem provided to vfsgen.
var SqlFiles = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 3, 18, 14, 4, 29, 685923195, time.UTC),
		},
		"/1_base_schema.down.sql": &vfsgen۰CompressedFileInfo{
			name:             "1_base_schema.down.sql",
			modTime:          time.Date(2020, 3, 5, 15, 23, 34, 201239935, time.UTC),
			uncompressedSize: 126,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x76\xf6\x70\xf5\x75\x54\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x88\x2f\x28\xca\xcf\x8d\x4f\x4e\x2c\x49\xcc\xc9\x4f\x57\x70\x76\x0c\x76\x76\x74\x71\xb5\xe6\xc2\xa7\x38\x33\xaf\x24\xb5\x28\x2f\x31\x87\x90\x6a\x90\x62\xb8\x1a\x40\x00\x00\x00\xff\xff\xdd\x04\x86\x65\x7e\x00\x00\x00"),
		},
		"/1_base_schema.up.sql": &vfsgen۰CompressedFileInfo{
			name:             "1_base_schema.up.sql",
			modTime:          time.Date(2020, 3, 18, 20, 56, 48, 44762762, time.UTC),
			uncompressedSize: 11351,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x6d\x73\xdb\xc6\x11\xfe\x8e\x5f\xb1\x1f\xdc\x11\xd1\x10\xb4\xd5\x34\x99\xa9\x54\x67\x86\xa6\x20\x19\x0d\x05\x2a\x24\x18\x3b\xcd\x64\x30\x47\xe0\x48\x9e\x05\x02\x30\xee\x68\x89\x9d\xfc\xf8\xce\xde\x1d\x80\xc3\x0b\x29\xc9\x69\xa7\xe5\x87\x44\x06\x70\x77\xfb\xf2\xec\xee\xb3\x0b\x38\x8e\x3f\x0b\xdc\x85\xe5\x38\xc1\x96\x71\x88\xb2\x98\x02\xe1\x7c\xbf\xa3\x1c\xc4\x96\x08\x10\x64\x95\x50\x48\x09\x5e\x88\x48\x0a\x59\x9a\x1c\x60\x45\xe1\xfb\x6f\x21\xda\x92\x82\x43\x92\xa5\x1b\xcb\x9a\xcc\xdd\x71\xe0\xc2\x62\xf2\xde\xbd\x1d\x43\x98\x17\xd9\x2e\x8c\x88\x20\x49\xb6\xb9\xec\xbd\xc9\x52\x41\x8b\x94\x24\xed\xbb\x78\xf3\x12\x1c\x27\x26\x82\xa8\xc3\x39\x6c\x32\xd8\xd2\x82\x5a\x96\xd3\xff\xb3\x1c\x07\x02\x29\x67\x4c\xd7\x2c\x65\x82\x65\x29\x07\x79\xbd\xff\xf9\xf2\xcc\x60\xfc\x6e\xea\x36\xa5\x1d\x71\x5a\x30\xca\x61\x60\x01\x00\xb0\x18\x56\x6c\x83\x97\x48\x32\x94\x57\x76\x54\x14\x2c\x0a\x59\x0c\x2c\x15\xea\x52\x42\x56\x34\xe1\xf8\xef\x5f\x7f\x53\x57\x96\xbe\xf7\xd3\xd2\x1d\xa8\x1b\x36\x78\xfe\x64\xba\xbc\x72\x61\xc0\x62\xdb\xb2\x2b\x8d\x3d\xff\xca\xfd\x08\xea\xbc\x50\x3d\x8b\xfb\xce\xfc\x7e\x89\x96\x0b\xcf\xbf\x81\x1b\xcf\x87\x72\xe3\xcb\x93\x8a\xc8\x87\x6a\x3d\x4c\x25\xee\xe9\x01\x02\xf7\x63\xa0\xfe\xf5\x85\x24\x7b\x0a\x82\x3e\x6a\x7d\xee\xe6\xde\xed\x78\xfe\x0b\xfc\xe8\xfe\x22\x45\xae\xe5\xbf\xa7\x87\xa1\x7a\xdc\x36\x15\x6d\xdc\xe8\x68\xfb\xa4\x8c\xe1\x3d\x3d\x84\x79\xc6\xa5\xdf\xb4\xc0\xca\xcc\x86\x50\x4d\x91\xf3\x8c\xd7\xf6\x2f\x85\x50\x6b\x86\xf8\xa8\x21\x45\x9e\xf1\xae\xd1\x3b\x36\xee\x0a\x72\x62\xbb\xd3\x3a\x69\xd1\x2b\xc3\x2f\xdc\xb9\x37\x9e\x9a\x56\x6d\x20\x09\x43\xcb\xd0\x53\x42\x5e\x5d\xc4\xff\xf4\x69\x28\xef\x1a\x22\xd5\x4b\x1a\x5e\x31\xaf\x9b\x7e\x98\xcd\x61\xee\xde\x4d\xc7\x13\x17\xae\x97\xfe\x24\xf0\x2a\x63\x94\x31\x39\xda\x91\x7b\x1a\xea\xc3\xe4\x2e\x03\x5b\x6e\x3c\x77\x83\xe5\xdc\x5f\x80\x28\xd8\x66\x43\x0b\x79\x6d\xbc\x80\x57\xeb\x7d\x1a\xbd\xb2\xae\xdc\xc9\x74\x3c\x77\xad\x77\xee\x8d\xe7\xe3\x3d\xf7\xa3\x3b\x59\x06\x2e\xac\xb3\x62\x47\xc4\xe0\xac\x61\x34\x3c\x71\xf4\x27\x6f\x20\xd8\x8e\x42\xe0\xdd\xba\x8b\x60\x7c\x7b\x17\xfc\x53\xe3\x08\xae\x66\x4b\x7c\xec\x6e\xee\x4e\xbc\x85\x37\xf3\x87\x65\xa4\xb0\x18\x3c\x3f\xb0\xcf\x94\xae\xed\x9f\xef\x7e\x18\x19\x8a\x5f\x9e\x90\xa3\x82\x82\x16\x05\x06\xd5\x09\x43\x40\xb1\x0c\x1b\x2b\x6c\xbf\xe0\x4c\x65\x2a\xbc\x75\x69\xb9\xfe\x95\xa5\x6d\x34\x1d\xfb\x37\xcb\xf1\x8d\x0b\x79\x92\x6f\xf8\xe7\xc4\x80\xd2\xdc\xbb\xb9\x71\xe7\xd0\xb1\x7d\xa8\xad\x0d\xca\xdc\xd7\x81\x3b\x07\xcf\x5f\xb8\xf3\xa0\x0b\x63\xb5\x4e\x3e\x78\x3d\x9b\x83\x3b\x9e\xbc\x87\xf9\xec\x83\xbc\x50\x5a\xe1\x6e\x3e\x9b\xb8\x57\xcb\xb9\xfb\x0c\xaf\x5f\x5a\xf8\x3b\x92\x46\x65\xde\xf5\xf4\x6a\x40\xfd\x9e\x4a\xbc\x0e\xee\x05\x73\x2a\xf6\x45\x0a\xc4\xa8\x2d\xb0\xda\xb3\x44\xc0\xba\xc8\x76\x40\x1a\x91\x41\xd2\x18\x08\xf0\xfd\x7a\xcd\x1e\x47\x20\x33\xfd\x96\x96\xe9\x41\x3e\xc1\x38\x88\x62\x9f\x46\x44\xd0\x18\x78\xa6\xcb\xd6\x96\xea\x45\x10\x65\xfb\x24\x86\x35\x13\xc0\x52\x58\xef\x93\x64\xf4\x92\x48\x30\x1d\x81\xc7\x85\x0f\x4c\x6c\x43\xb5\xf5\xa0\x42\x43\x27\x96\xcb\xc3\xf1\x1f\xcd\xd8\xc1\x67\xac\x3a\x68\xf0\xd6\xc2\x9d\xba\x93\x00\x06\x7c\xbf\xe2\xa2\x60\xe9\xc6\x0c\x74\x44\x2d\x7c\xff\xad\x33\xc0\x72\x1b\x26\x34\xdd\x88\xed\x40\xed\x6e\x7f\x73\x6e\xdb\xf0\xfb\xef\x70\x16\x9e\xe1\xff\xf4\xd5\x8b\x0b\x79\x46\x1b\x71\xfc\x73\x02\xde\xed\xed\x52\x85\xdf\xdd\x78\x3e\x9e\x4e\xdd\x29\x2c\xc6\xd7\xee\x65\xd3\x2f\x29\x7d\x80\xea\x68\x52\xe5\x62\xb4\xc1\x48\x79\x40\xda\x1c\x8b\x92\xc8\x60\xcf\xa9\x34\xb7\xf9\x58\x65\x6a\x78\xb7\x17\xc0\xd6\xf2\x01\x5c\x6a\x3a\x2e\xce\x28\x4f\xcf\x04\xba\x66\x08\x1b\x9a\xd2\x82\x08\xca\xf5\xf9\xfb\x94\x7d\xde\x2b\x70\xc8\x33\xfd\x4c\xd0\xd2\xb5\x4c\x51\x11\x3c\x78\x9f\xcb\xad\x53\xfa\x28\x30\x6f\x40\xb6\xee\x8d\x08\xe5\x3a\xb4\xcf\x23\x6e\xc6\x33\x60\x02\xf8\x56\x22\x63\x45\x21\x22\x49\x42\x63\xc5\x6d\xd8\xba\x42\x26\x0a\x08\x69\x26\xe0\x40\x05\xd0\x47\xc6\xc5\x08\x5e\x80\x9d\x94\x3e\x84\x1d\xfc\xf4\x62\x26\x24\xc5\x46\xe3\xa6\xc1\x2f\x9e\x8b\x9c\xc9\x78\xe1\x42\xb5\xf1\x87\xf7\xae\x0f\x26\x5a\x5a\x27\xd9\xf0\x77\xa4\x6f\xc1\x7b\xd7\x6f\xa4\xb3\xd6\x63\x0a\x46\xf5\xb6\xee\xd4\x3c\x04\x7f\x5f\x17\x2b\x47\x8e\x33\x54\xbf\xb8\x40\x5b\x34\x16\xd8\xb5\x18\x3d\xc9\x14\xa1\xfd\xf3\x6c\x3a\x0e\xbc\x5e\x64\x4f\x0a\x6a\x20\x4b\xf9\x56\x41\x7b\xc3\xbe\xd0\xd4\x04\xe5\xa8\x64\xc2\x7b\x4e\x39\xa2\x8b\x67\x3b\x0a\x9c\x7e\xde\xd3\x34\xa2\x1c\x91\xa3\x61\x53\x12\x61\x8d\x1d\xcb\x71\x3c\x05\xf3\xa3\xd8\x79\x01\x74\x22\x29\x71\x33\x19\x3f\x01\x9c\xd9\x32\x00\xcd\x4a\xe5\xdf\x2d\x22\x61\x5b\xdd\x42\x0d\x68\x0f\x0d\xb5\x4b\x5d\xb6\xf5\x95\xb7\x32\xa4\xbe\x90\x64\x90\x6f\xc2\x0d\x15\xa1\xa2\x8f\x61\x69\x89\xc1\x59\x5f\x98\x9d\x0d\xcf\x58\x7c\x66\xdb\x17\x17\x72\xc7\xe9\x6c\x76\x27\xa5\xd6\xe5\xca\xf3\x83\xd9\x11\xb2\x84\x25\xd7\xd0\x6b\x08\x26\x79\x29\x15\xd7\x68\xd7\x52\x77\x6b\x71\x07\x51\x9d\x27\x9e\x15\xa1\x9d\x6d\xd4\x79\x4a\x8e\x99\x0f\x93\x99\x7f\x3d\xf5\x26\x01\x5c\xcd\xc0\x9f\x05\xef\x3d\xff\xc6\x88\x53\x24\xe9\x7d\x3a\x8e\x50\xc5\xde\x1b\xf5\xd1\xda\x58\xc1\x0c\x24\x05\xa9\xae\x4b\x46\x01\x8e\x03\xfb\x34\xa6\x05\x6c\xd9\x66\x0b\x51\x96\x46\xfb\xa2\xa0\x69\x74\x90\xb0\x63\x29\xa7\x85\x80\x1d\x39\x48\xd8\x15\x3a\x99\xa7\x07\xb1\x65\xe9\x66\x28\x2b\x63\x71\xc0\x5a\x4a\x13\x1a\x09\x59\x58\x93\x2c\xcb\xcb\xad\xb7\x42\xe4\xfc\xe2\xf5\x6b\x2e\x48\x74\x9f\x7d\xa1\xc5\x3a\xc9\x1e\x46\x51\xb6\x7b\x4d\x5e\x9f\x7f\xf7\xb7\xef\xde\x7c\xfb\x97\xbf\x6a\x1e\xe1\x05\x2a\xc7\x5c\xcf\x96\xfe\xd5\xa5\x65\x66\xa2\x9d\x54\x73\x67\xe8\x04\xc7\x94\x52\x2c\x65\x3e\xbb\xed\x87\xc4\xce\xd2\xb9\x6c\xee\x36\xca\xeb\xdb\xb6\x9b\xb5\x00\x1d\xb1\x5c\xff\x0a\x10\x81\xea\xaf\x4e\xce\xb8\x9b\xde\xdd\x2c\x7e\x9a\x9e\xca\x1b\x70\x43\x85\x4e\x1a\xaa\x99\x22\x45\x41\x0e\x50\xb5\x2a\x2a\x87\xa8\x5b\xf7\xf4\x30\x82\x6b\xbc\x90\x1e\xb4\x84\x43\xdc\xe2\x81\xc2\x03\x49\x15\x21\x29\x17\xca\xb2\xb9\xc2\x46\x1b\xa2\x6c\x97\x13\xf4\x06\xc7\xbb\x9c\x35\x4a\xac\xcc\x41\x32\x01\xe5\x05\x15\xe2\x00\x5b\x4a\xbe\x1c\x20\xc9\xa2\x7b\x99\x89\xb0\x00\xf2\x9c\x20\x63\x48\x0e\x2f\x2a\x4d\x18\xd1\x88\xea\x3c\xe3\xe1\x3a\x2b\xb0\xf1\x39\x45\x66\xb0\x2f\xaa\xfe\xd9\x2c\x4a\x2c\x15\xbd\x99\x05\x6a\x33\xc9\x5c\x80\x57\x30\xa5\x84\xdd\xcb\x66\x04\x82\x3f\xbe\x75\x2f\xeb\x16\x02\x1c\x07\xb5\x8c\xb3\x3d\xde\x8c\xb6\x34\xba\x97\xfa\xb3\x74\xa3\x66\x02\xea\x99\x35\xe3\x02\xb2\x5c\xb0\x1d\xe3\x82\x45\xea\xc1\x0b\x03\x98\x95\x72\x79\xc6\x2b\xe0\x59\xcd\xb4\x70\xbc\x17\xac\xa1\xd8\x32\x52\x13\x8d\xd5\xcd\xb1\x7f\x25\xbb\xe7\xb7\xb5\xe5\xea\x28\x28\x37\xd5\xb8\xf5\xae\x15\x60\x9b\xf5\x58\xb7\x0f\xf5\xb3\xba\xf4\x81\x77\xad\xfe\x36\x83\xae\x1d\x6c\x32\xa8\xd0\xc5\x59\x11\xf6\x54\x92\x4e\x96\xb3\x6b\xe1\xcc\xe7\xca\xac\x83\xf6\x46\x80\x22\xdc\xc7\x53\x6c\x3f\x14\x85\x5c\xd1\x88\xa0\x73\x1e\x28\x90\x42\x52\x3e\xba\x5e\x63\x6a\x89\xb6\x24\xdd\xa0\x87\x24\x0b\x8f\xb6\x74\x47\x4c\x67\x91\x84\x67\xb2\xcd\xe1\xc0\xf7\x05\xad\x08\x5c\x0d\x8d\x15\x4d\xb2\x07\x90\xf3\xa8\xa2\xc0\x1d\x59\x0a\x82\x16\x3b\x8e\xfc\xce\x48\x7c\x8d\xbe\xa6\xec\xee\xa6\xb3\xc9\x8f\xcd\x1e\x13\x3c\x1f\x16\xef\xc7\x73\x17\x96\x77\x57\x18\x21\xee\xc7\xc9\x74\xb9\xf0\x7e\x76\xe1\x76\x76\xe5\x9e\x0d\x1b\x6a\xdb\xa5\xde\x9c\x46\x59\x1a\x6b\xd0\x91\xb5\xa0\x85\x84\xde\xff\x13\xaa\x5a\x80\xaa\x80\xf1\xc7\x41\x55\x8b\x44\x1e\xe5\xd0\x03\xbe\x81\xf3\xff\x9a\x8e\x4a\x91\x06\x08\x9a\xda\x34\xf1\xe1\x2d\xc0\x5f\x4e\xa7\x4d\xed\x9a\x8f\x5c\xbc\x85\xf3\x4b\xac\x6b\xe7\x0e\x4b\x63\xfa\x48\x63\x95\xbd\x79\xbf\xd2\xc7\x19\xca\x11\x9d\xf0\xf7\xf3\x78\xba\x74\x17\x8d\xb1\x4c\x9d\x2b\x87\x4d\x81\x3a\xec\xa1\xda\xe5\x18\x8b\x30\xc1\x75\xca\xd1\xfe\x2c\xe8\x75\xf6\xd8\x5b\xb8\x70\x36\x91\x64\x15\x19\xc1\x9a\xc9\x56\x1a\xab\x59\xb9\xd1\x59\x17\x02\x1d\x8c\x9c\x1e\x5e\x38\x4e\x3f\x1d\x56\xe1\x42\x74\xf0\xe8\xbe\x4d\xf7\xe5\xaa\x60\x96\xdd\x9f\xe4\xc6\x5f\x51\xba\x94\x5f\x58\x3c\x68\x14\x27\x3d\x3d\x32\x2f\x68\x62\xec\xf9\x81\xc9\x81\x55\x85\xe9\x65\xa8\xa7\xc0\x6d\x4e\x3a\x2d\x03\x03\xd5\x9a\x4a\x9c\x61\x2d\xc8\x57\x33\x47\x79\xe4\x88\xc5\x0d\x0e\x75\x8c\xef\x98\x15\xa1\x12\x07\x57\x9b\x8b\x8f\x91\x2e\xe5\x93\xc4\xe0\x5c\xd5\x16\xf7\xf4\x60\xa6\x1c\xcc\x42\xd5\x3d\x35\xaa\x7b\x6b\x18\xdd\xc0\xe6\x69\x46\x76\x8c\x90\x49\x50\x3d\x14\x24\xcf\x11\x40\x45\xb6\x4f\x63\xf8\xc4\xb3\x74\x15\x52\x12\x6d\x43\xf4\x29\xd2\x27\xec\xdc\x80\xc0\x8a\x0a\x04\x5a\x91\x3d\x84\x94\x0b\xb6\x23\x82\x5a\x8e\x83\x95\x4a\x4f\xe5\x07\xe7\x6f\x24\xfa\xcf\xdf\xbc\xb1\x5f\x80\x32\x85\xae\xd6\xb9\x83\x4f\x5c\x89\x32\x04\x89\x2a\xb4\x4c\x8d\xb1\x7a\x8c\x6e\x5b\x15\x3d\x5a\xb8\xc1\xec\x1a\x0a\x1a\x65\x45\x6c\x41\xa5\x6b\x79\x8e\x75\x6c\x22\x03\x8b\x60\x8e\x40\x99\xcf\x3e\x2c\xe0\xfc\x4d\x05\x5c\x8c\xc9\x57\x2d\xb1\xea\x1b\x7d\xb6\xdb\xa7\x29\xe5\xb5\xc9\x6a\x83\x41\x69\xb0\x3f\x66\x23\xb5\xbf\x7a\x25\x11\x2a\x82\x4c\xd2\x83\xfc\xa3\x63\x07\x92\x1e\x68\x42\x77\x34\x15\xff\x31\x5b\xc8\x83\xb4\x10\x0d\x43\x1c\x9d\x41\x9e\xf8\xf5\xad\x81\xbb\xfd\x2a\x61\x11\x8c\xef\x3c\x0e\xcf\x5c\xf3\xe4\x39\x56\xbd\x6f\x29\xb3\xf4\x10\x55\x19\x52\x06\x5a\x66\x8e\x13\xba\xe3\x8a\xaa\x4b\x78\x60\x49\x02\x8a\xe6\xf5\xcc\xe1\xd6\xc0\xc4\x4b\x87\x11\x4f\x51\xc7\xa3\x9d\x42\xb3\x35\x50\xae\x1c\x94\x43\x89\x13\x03\x89\x3a\x71\x35\x5b\x44\x63\x04\xf5\x44\xa3\xa8\xfb\xc4\x51\xb3\x53\x7c\x42\x91\x51\x8b\x65\x2d\x7d\xd4\x7e\x3c\x9d\x1a\x02\xfd\xb9\x7d\xfa\xc9\x19\xcd\x0b\x0e\x94\xb6\x9a\x7a\xb7\x5e\x00\xe7\x2f\x1d\x68\xe5\xc7\xa1\x73\xba\x45\x7d\xca\xeb\x0d\xb2\xf3\x95\x1d\xa1\xe7\x07\x20\x7d\xfb\x4a\xf3\x68\x49\x0d\xe8\x23\x8d\xf6\x42\xbe\x55\xa6\xb0\xcb\x0a\x0a\xf4\x31\xa7\x29\xc7\x9c\x54\xb6\xe2\x95\x3e\x7a\x60\xdc\x43\x14\x7a\x29\xea\xff\x88\x7d\xcb\x5b\x15\x66\xa0\xb7\xfe\x3e\xa3\xef\xee\x65\x8f\xca\xa4\x15\x3c\x0c\x68\x94\x25\xf2\x86\x1a\x6c\x2a\x64\xb1\x76\x75\xcd\x4f\x20\x27\xac\x78\x9e\xc3\x59\x3c\x30\xcb\xfd\x09\x3a\xf5\x84\xab\xd7\xac\xe0\xa2\x9c\x30\x89\x0c\xf2\x82\x7e\xa1\xa9\xa8\x06\xa8\xea\x0d\xcf\x8a\x62\x73\xb8\xe7\x34\x86\x7d\x39\x7f\xc2\x0c\x1e\x51\xce\x49\xc1\x92\x43\xaf\x29\x9f\x20\x2f\x7f\x9c\xba\x34\xfd\xf9\x12\x77\x76\xb8\xa8\x69\xb7\xa7\x5d\x29\xd3\xb8\xf9\x02\xa4\x6e\x84\x09\x2f\x1b\x17\x65\x3a\xf4\xb8\x2c\xff\x96\xe3\xbc\xe1\x50\xd0\xbc\xa0\x1c\x2d\x7c\x4f\x0f\xfa\x8b\x0d\xec\xc5\x31\xd7\x73\x2a\x60\xf0\x40\x21\xce\x30\x7a\xb0\x51\x97\x3d\x13\x52\x76\x86\xae\x60\xa9\x50\x1b\x57\xd5\x81\xef\xf3\x3c\x2b\x04\x30\x61\x57\x73\x70\x56\xdd\xa2\x05\xe4\xb4\x90\x5d\x36\x2e\x8f\x0a\x26\x58\x44\x12\x50\xbb\x89\x2d\xe3\x96\xe3\x30\xae\x3a\x01\xe9\x5c\xcc\x4c\xf5\x64\x32\x4a\x18\x0a\x4a\xd2\x58\x76\xf6\x24\xda\xd2\x18\xef\x17\xf4\xf4\xe8\x4a\xb1\x1d\x91\x85\x06\xc5\xa8\x98\x98\x6d\x19\x58\xfc\xf5\x37\xa8\xc1\xf8\xc1\x0b\xde\x03\x8b\x1f\xc3\x2f\x24\xc1\xcb\x35\xc2\xdb\x4e\x55\x00\x54\x72\x63\xfb\x22\x85\xae\x5f\x67\x8a\xac\xac\xae\xd8\x3a\x21\xa4\xea\x39\x5e\x7b\x0f\x39\x54\x95\x59\x8b\xc5\x5c\xa7\xb1\x83\xf6\x80\xca\x5f\x03\x0c\x53\xd3\x8e\x05\x25\x3c\x4b\xb9\xdd\xd8\x2a\xca\x48\x42\x79\x44\x07\xc9\x7d\x3e\xca\x33\xde\x9e\x75\x77\x73\xf5\x27\xee\xfc\xf0\xc3\x59\xa8\xa6\xa2\xe1\xd9\x10\xe8\xe8\x9e\x1e\x6c\x1b\x4d\xd0\x1a\x84\xd7\x9b\xcb\x61\xed\xd1\xad\x59\x3c\x90\x9b\xe0\x5e\xaa\xe3\xb1\xe5\x3b\xb6\x6a\x41\x5f\x55\x3c\x46\x9c\x6d\xa0\xcd\x83\xa6\xee\x75\x00\xff\x98\x79\xbd\x5f\x62\xe8\x4e\xc4\xf8\xcd\x7c\x18\x24\x23\x15\xd0\x52\x2a\x19\xcd\xc9\xa8\x0c\xe3\x52\x44\xeb\xd9\x67\x34\x3f\x3b\x49\xee\xf3\x9e\x23\xdb\x97\xba\x6f\xb1\x00\x57\x8e\xaa\xca\xd1\x72\x43\x33\xe5\x34\xd7\x18\xba\xb4\x9f\x50\x5a\xd8\x66\x0a\x1a\xcf\xe7\xe3\x5f\x3a\x18\xae\x5c\xa9\x81\x8e\x46\x18\xc2\x1b\xbb\xe5\x23\xab\xe9\x60\x95\x68\x42\xf5\xb5\x43\x9f\x4a\x00\xe7\x3d\x2f\x4f\xa4\x01\xca\x39\x3f\x79\xc4\x33\x6d\xb5\xbf\x3e\xbd\x69\x7c\x1b\x36\x70\xc4\x1b\x65\x58\xa2\x53\x4b\xc9\x59\xfc\x88\x8c\xad\x54\xbd\x95\x27\x4f\xb1\x21\xf5\xde\x9a\xd7\xb9\x51\x97\x42\xfd\xdd\x94\xfc\x26\x8c\xc6\xb0\x3a\x94\x4c\x48\xe5\x10\xcb\x71\x5a\x2f\x95\x2b\xfe\x51\xbf\x19\x56\x33\xe5\x7f\x51\x55\x5e\xcd\xb8\x3d\x95\xb2\x8c\x53\x30\x71\x49\xa1\x06\xe6\x67\x62\x75\xda\x52\x02\xd7\x69\xab\x45\x6d\x54\x20\x65\xab\x4f\x34\x12\x03\xb5\x21\xd9\x6c\x54\x24\xd8\x43\x30\xaf\xe8\x10\x6d\x33\xa1\x27\x9b\x36\x6e\x57\x1c\x42\x2f\xf1\x7c\xdf\x9d\x9f\x88\x4d\x1d\x8c\xf2\x35\x61\xb9\xd4\x86\x8e\xcb\x16\xc7\xbe\x34\xb8\xca\x64\x4d\x91\xb9\x76\x45\xd7\x48\x06\xe5\x9c\x48\x8d\x8c\xcb\xaf\x37\xb4\xf7\x3a\xad\xcb\xcb\x5f\xa3\xb6\x81\xde\xf3\x0d\x1f\x94\xdf\xf1\xe9\x16\x56\x7d\xcc\x57\xe3\x17\x1b\xfc\xfa\xfb\xa3\x77\xde\xcd\xf3\xc7\x49\x7d\x1f\xf3\x0d\x2a\x11\x86\x7a\x50\xd1\x08\xf6\xf6\x5d\x0d\x58\x78\xee\x14\xc9\x9c\xf9\x54\x52\x1f\x9b\x1b\xb5\x5e\x26\xf4\xae\x3d\xc6\xbc\xd4\x03\x06\xf5\xd2\x20\x7f\x6b\xca\xfd\xac\x17\x74\x2f\x7f\x3f\xd7\x85\x41\x93\xda\x56\xc2\x4b\xa6\xad\xa6\x77\x0a\xc0\x2d\xe6\xa0\xbc\x59\xc7\xa0\x64\x0e\x93\xc0\x6d\xb0\x06\x6d\x9d\x5e\x32\x22\xff\x96\x0e\xb4\xad\xb6\x21\x4f\x1a\xad\x65\xb3\x41\xd5\x73\xca\x55\x91\x50\xe5\xac\xaf\x2d\x3d\x09\xf4\xa7\xda\x50\x25\x70\xa3\x50\xd9\xb6\xe4\x02\x3d\x12\xa8\x5a\x72\x84\xbe\x1e\xf3\xce\xbf\x03\x00\x00\xff\xff\xb9\x98\x44\x77\x57\x2c\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/1_base_schema.down.sql"].(os.FileInfo),
		fs["/1_base_schema.up.sql"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
